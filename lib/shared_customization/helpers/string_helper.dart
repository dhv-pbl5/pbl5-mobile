class StringHelper {
  StringHelper._();

  static String removeSignAndSpaceVietnameseString(String str) {
    List<String> ecode = [
      'à',
      'á',
      'ạ',
      'ả',
      'ã',
      'â',
      'ầ',
      'ấ',
      'ậ',
      'ẩ',
      'ẫ',
      'ă',
      'ằ',
      'ắ',
      'ặ',
      'ẳ',
      'ẵ',
      'è',
      'é',
      'ẹ',
      'ẻ',
      'ẽ',
      'ê',
      'ề',
      'ế',
      'ệ',
      'ể',
      'ễ',
      'ì',
      'í',
      'ị',
      'ỉ',
      'ĩ',
      'ò',
      'ó',
      'ọ',
      'ỏ',
      'õ',
      'ô',
      'ồ',
      'ố',
      'ộ',
      'ổ',
      'ỗ',
      'ơ',
      'ờ',
      'ớ',
      'ợ',
      'ở',
      'ỡ',
      'ù',
      'ú',
      'ụ',
      'ủ',
      'ũ',
      'ư',
      'ừ',
      'ứ',
      'ự',
      'ử',
      'ữ',
      'ỳ',
      'ý',
      'ỵ',
      'ỷ',
      'ỹ',
      'đ',
      'Đ',
      ' '
    ];
    List<String> dcode = [
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'i',
      'i',
      'i',
      'i',
      'i',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'y',
      'y',
      'y',
      'y',
      'y',
      'd',
      'đ',
      ''
    ];
    Map<String, String> map = Map.fromIterables(ecode, dcode);
    return map.entries.fold(str, (prev, e) => prev.replaceAll(e.key, e.value));
  }

  static String removeSignVietnameseString(String str) {
    List<String> ecode = [
      'à',
      'á',
      'ạ',
      'ả',
      'ã',
      'â',
      'ầ',
      'ấ',
      'ậ',
      'ẩ',
      'ẫ',
      'ă',
      'ằ',
      'ắ',
      'ặ',
      'ẳ',
      'ẵ',
      'è',
      'é',
      'ẹ',
      'ẻ',
      'ẽ',
      'ê',
      'ề',
      'ế',
      'ệ',
      'ể',
      'ễ',
      'ì',
      'í',
      'ị',
      'ỉ',
      'ĩ',
      'ò',
      'ó',
      'ọ',
      'ỏ',
      'õ',
      'ô',
      'ồ',
      'ố',
      'ộ',
      'ổ',
      'ỗ',
      'ơ',
      'ờ',
      'ớ',
      'ợ',
      'ở',
      'ỡ',
      'ù',
      'ú',
      'ụ',
      'ủ',
      'ũ',
      'ư',
      'ừ',
      'ứ',
      'ự',
      'ử',
      'ữ',
      'ỳ',
      'ý',
      'ỵ',
      'ỷ',
      'ỹ',
      'đ',
      'Đ',
    ];
    List<String> dcode = [
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'a',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'e',
      'i',
      'i',
      'i',
      'i',
      'i',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'o',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'u',
      'y',
      'y',
      'y',
      'y',
      'y',
      'd',
      'đ',
    ];
    Map<String, String> map = Map.fromIterables(ecode, dcode);
    return map.entries.fold(str, (prev, e) => prev.replaceAll(e.key, e.value));
  }
}
